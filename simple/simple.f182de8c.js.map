{"mappings":"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","sources":["demos/simple/demo.js","demos/simple/style.js","demos/simple/osm.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","demos/simple/shadowtrack.js"],"sourcesContent":["\nimport TrackManager from '../../src/interaction/TrackManager.js';\nimport GraphHopperRouter from '../../src/router/GraphHopper.js';\nimport {ExtractFromSegmentProfiler, FallbackProfiler, SwisstopoProfiler} from '../../src/profiler/index.js';\nimport Profile from '../../src/Profile.js';\nimport {styleFunction} from './style.js';\nimport {Style, Circle, Fill} from 'ol/style';\nimport {createMap} from './osm.js';\n\nconst ROUTING_URL = 'https://graphhopper-all.schweizmobil.ch/route?vehicle=schmwander&type=json&weighting=fastest&elevation=true&way_point_max_distance=0&instructions=false&points_encoded=true';\n\n\nfunction main() {\n  const {map, trackLayer, shadowTrackLayer} = createMap('map');\n\n  const router = new GraphHopperRouter({\n    url: ROUTING_URL,\n    mapProjection: map.getView().getProjection()\n  });\n\n  const profiler = new FallbackProfiler({\n    profilers: [\n      new ExtractFromSegmentProfiler(),\n      new SwisstopoProfiler({\n        projection: map.getView().getProjection()\n      })\n    ]\n  });\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent\n   * @return {boolean}\n   */\n  const altKeyAndOptionallyShift = function (mapBrowserEvent) {\n    const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey);\n  };\n\n  // by default there is no delete condition (clicking on a CP will delete it)\n  // but it is still possible to pass a custom deleteCondition\n  let deleteCondition = altKeyAndOptionallyShift;\n  deleteCondition = undefined;\n  const trackManager = new TrackManager({\n    map: map,\n    router: router,\n    profiler: profiler,\n    trackLayer: trackLayer,\n    shadowTrackLayer: shadowTrackLayer,\n    style: styleFunction,\n    deleteCondition: deleteCondition,\n  });\n\n  window.trackManager = trackManager;\n\n  /**\n   * @type {Profile}\n   */\n  const d3Profile = new Profile({\n    map: map,\n    profileTarget: '#profile',\n  });\n\n\n  trackManager.addTrackChangeEventListener(() => {\n    const segments = trackManager.getSegments();\n    d3Profile.refreshProfile(segments);\n  });\n\n  trackManager.addTrackHoverEventListener((distance) => {\n    if (distance !== undefined) {\n      d3Profile.highlight(distance);\n    } else {\n      d3Profile.clearHighlight();\n    }\n  });\n\n  trackManager.mode = 'edit';\n  const tmEl = document.querySelector('#trackmode');\n  tmEl.addEventListener('change', evt => trackManager.mode = evt.target.value);\n\n  document.querySelector('#snap').addEventListener('click', () => {\n    trackManager.snapping = !trackManager.snapping;\n  });\n  document.querySelector('#delete').addEventListener('click', () => {\n    trackManager.deleteLastPoint();\n  });\n  document.querySelector('#clear').addEventListener('click', () => {\n    trackManager.clear();\n  });\n\n  document.querySelector('#undo').addEventListener('click', () => trackManager.undo());\n  document.querySelector('#redo').addEventListener('click', () => trackManager.redo());\n  document.querySelector('#getTrackData').addEventListener('click', () => {\n    trackManager.getTrackFeature();\n    const features = [\n      ...trackManager.getControlPoints(),\n      ...trackManager.getSegments(),\n      ...trackManager.getPOIs(),\n    ];\n    trackManager.restoreFeatures(features)\n  });\n  document.querySelector('#reverse').addEventListener('click', () => {\n    trackManager.reverse();\n  });\n\n  d3Profile.setTrackHoverStyle(new Style({\n    image: new Circle({\n      fill: new Fill({\n        color: 'blue',\n      }),\n      radius: 9\n    })\n  }));\n}\n\nmain();\n","import {Circle, Fill, Stroke, Style, Icon, Text} from 'ol/style.js';\n\n\n/**\n * @type {Style}\n */\nexport const controlPoint = new Style({\n  zIndex: 10,\n  image: new Circle({\n    radius: 8,\n    fill: new Fill({\n      color: 'white'\n    })\n  })\n});\n\n/**\n * @type {Style}\n */\nexport const firstControlPoint = new Style({\n  zIndex: 10,\n  image: new Circle({\n    radius: 8,\n    fill: new Fill({\n      color: 'green'\n    })\n  })\n});\n\n/**\n * @type {Style}\n */\nexport const poiPoint = new Style({\n  zIndex: 100,\n  image: new Circle({\n    radius: 8,\n    fill: new Fill({\n      color: 'yellow'\n    })\n  })\n});\n\n/**\n * @type {Style}\n */\nexport const lastControlPoint = new Style({\n  zIndex: 10,\n  image: new Circle({\n    radius: 8,\n    fill: new Fill({\n      color: 'red'\n    })\n  })\n});\n\n\n/**\n * @type {Style}\n */\n export const numberedControlPoint = new Style({\n  zIndex: 10,\n  image: new Circle({\n    radius: 8,\n    fill: new Fill({\n      color: '#ffffffdd'\n    })\n  }),\n  text: new Text({\n    fill: new Fill({\n      color: 'blue'\n    })\n  })\n});\n\n\n/**\n * @type {Style}\n */\n export const sketchControlPoint = new Style({\n  image: new Circle({\n    radius: 5,\n    fill: new Fill({\n      color: '#ffffffdd'\n    })\n  })\n});\n\nconst sketchLabel = {\n  'POI': new Style({\n    text: new Text({\n      font: '20px sans-serif',\n      offsetX: 20,\n      textAlign: 'left',\n      backgroundFill: new Fill({\n        color: '#ffffffaa'\n      }),\n      text: 'click to delete\\ndrag to move POI'\n    }),\n  }),\n  'cp': new Style({\n    text: new Text({\n      font: '20px sans-serif',\n      offsetX: 20,\n      textAlign: 'left',\n      backgroundFill: new Fill({\n        color: '#ffffffaa'\n      }),\n      text: 'click to delete\\ndrag to move point'\n    }),\n  }),\n  'segment': new Style({\n    text: new Text({\n      backgroundFill: new Fill({\n        color: '#ffffffaa'\n      }),\n      offsetX: 20,\n      textAlign: 'left',\n      font: '20px sans-serif',\n      text: 'drag to create point'\n    }),\n  })\n};\n\n\n/**\n * @type {Style}\n */\nexport const trackLine = new Style({\n  stroke: new Stroke({\n    color: 'purple',\n    width: 6\n  })\n});\n\n/**\n * @type {Style}\n */\nexport const trackLineModifying = new Style({\n  stroke: new Stroke({\n    color: 'purple',\n    width: 3,\n    lineDash: [5, 9]\n  })\n});\n\n\n/**\n * @param {import(\"ol/Feature\").FeatureLike} feature\n * @param {number} _\n * @return {?Style}\n */\nexport function styleFunction(feature, _) {\n  const type = feature.get('type');\n  const subtype = feature.get('subtype');\n  const index = feature.get('index');\n\n  switch (type) {\n    case 'sketch': {\n      if (subtype) {\n        return [sketchControlPoint, sketchLabel[subtype]];\n      }\n      return sketchControlPoint;\n    }\n    case 'POI':\n      return poiPoint;\n    case 'controlPoint':\n      switch (subtype) {\n        case 'first':\n          return firstControlPoint;\n        case 'last':\n          return lastControlPoint;\n        default:\n          if (index !== undefined) {\n            numberedControlPoint.getText().setText(index.toString());\n            return numberedControlPoint;\n          }\n          return controlPoint;\n      }\n    case 'segment':\n      switch (subtype) {\n        case 'modifying':\n          return trackLineModifying;\n        default:\n          return trackLine;\n      }\n    default:\n      return null;\n  }\n}\n\n/**\n * @param {string=} strokeColor\n * @return {Style}\n */\nexport function externalLayerStyle(strokeColor = '#e3ff00') {\n  return new Style({\n    stroke: new Stroke({\n      color: strokeColor,\n      width: 3\n    })\n  });\n}\n\n/**\n * @typedef {Object} TrackHoverUrlOptions\n * @property {string} src\n * @property {[number, number]} imgSize\n * @property {number} scale\n */\n\n/**\n * @param {TrackHoverUrlOptions} options\n * @return {Style}\n */\nexport function createProfileHoverStyle(options) {\n  return new Style({\n    image: new Icon(options)\n  });\n}\n","import EPSG_2056, {proj as proj2056} from '@geoblocks/proj/src/EPSG_2056.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport {View, Map as OLMap} from 'ol';\n\nimport {styleFunction} from './style.js';\nimport {transform, transformExtent} from 'ol/proj.js';\nimport {createShadowLayer} from './shadowtrack.js';\n\n\nexport function createMap(target) {\n  const trackSource = new VectorSource();\n  const trackLayer = new VectorLayer({\n    source: trackSource,\n    style: styleFunction,\n  });\n\n  const extent = transformExtent(proj2056.getExtent(), EPSG_2056, 'EPSG:3857');\n  const view = new View({\n    extent: extent,\n    center: transform([2532661.0, 1151654.0], EPSG_2056, 'EPSG:3857'),\n    zoom: 10,\n  });\n\n  const bgLayer = new TileLayer({\n    source: new OSM()\n  });\n\n  const shadowTrackLayer = createShadowLayer();\n  const map = new OLMap({\n    target,\n    view,\n    layers: [\n      bgLayer,\n      shadowTrackLayer,\n      trackLayer\n    ]\n  });\n  window['mymap'] = map;\n\n  return {map, trackLayer, shadowTrackLayer};\n}\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import {Style, Stroke} from 'ol/style';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorLayer from 'ol/layer/Vector.js';\n\n\n/**\n * @type {Style}\n */\n export const style = new Style({\n  stroke: new Stroke({\n    color: '#00cc33aa',\n    width: 6\n  })\n});\n\n/**\n *\n * @return {VectorLayer}\n */\nexport function createShadowLayer() {\n  const source = new VectorSource();\n  const layer = new VectorLayer({source, style});\n  return layer;\n}\n"],"names":["$jzg1d","parcelRequire","$cJntk","$6db9305ba30ed159$export$2a1ff327cdfb37bb","$c3RIb","default","zIndex","image","$wnhPR","radius","fill","$inIMS","color","$6db9305ba30ed159$export$9666d3d1050f050a","$6db9305ba30ed159$export$648bc2796ad58832","$6db9305ba30ed159$export$c6d39198c6830d0e","$6db9305ba30ed159$export$943cc3c4e3ff98b4","text","$6db9305ba30ed159$export$94f5fec2c43858fd","$6db9305ba30ed159$var$sketchLabel","POI","font","offsetX","textAlign","backgroundFill","cp","segment","$6db9305ba30ed159$export$14cdcf3774420a98","stroke","$lrKvI","width","$6db9305ba30ed159$export$187021f76968a73a","lineDash","$6db9305ba30ed159$export$8b4cd039ebcc4f7b","feature","_","type","get","subtype","index","undefined","getText","setText","toString","$9A3Ac","$71uyY","$963a7ef65488964c$var$XYZ","constructor","options","projection","tileGrid","$7vCDj","createXYZ","extent","extentFromProjection","maxResolution","maxZoom","minZoom","tileSize","super","attributions","cacheSize","crossOrigin","interpolate","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","this","gutter_","gutter","getGutter","$963a7ef65488964c$export$2e2bcd8739ae039","$6c8498cc816f2362$export$2e2bcd8739ae039","$f901588a5a3cabf5$export$1d567c320f4763bc","$f901588a5a3cabf5$export$97ef5e4c767fd8b7","source","$bnthu","$bdrRp","$ed3290abef31fd1c$export$d49c9aa30b771d59","target","trackSource","trackLayer","style","$dpRHA","transformExtent","proj","getExtent","view","$9DiKA","center","transform","zoom","bgLayer","$4mWlF","shadowTrackLayer","map","$5DwXE","layers","window","router","$83zT6","mapProjection","getView","getProjection","profiler","$2h9ct","FallbackProfiler","profilers","ExtractFromSegmentProfiler","SwisstopoProfiler","deleteCondition","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","trackManager","d3Profile","$lW3AJ","profileTarget","addTrackChangeEventListener","segments","getSegments","refreshProfile","addTrackHoverEventListener","distance","highlight","clearHighlight","mode","document","querySelector","addEventListener","evt","value","snapping","deleteLastPoint","clear","undo","redo","getTrackFeature","features","getControlPoints","getPOIs","restoreFeatures","reverse","setTrackHoverStyle","$760e26e122f40dad$var$main"],"version":3,"file":"simple.f182de8c.js.map"}